// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// tools views
//
// Command:
// $ goa gen github.com/arduino/arduino-create-agent/design -debug

package views

import (
	goa "goa.design/goa"
)

// Tool is the viewed result type that is projected based on a view.
type Tool struct {
	// Type to project
	Projected *ToolView
	// View to render
	View string
}

// ToolView is a type that runs validations on a projected type.
type ToolView struct {
	// The name of the tool
	Name *string
	// The version of the tool
	Version *string
	// The packager of the tool
	Packager *string
}

// ValidateTool runs the validations defined on the viewed result type Tool.
func ValidateTool(result *Tool) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateToolView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateToolView runs the validations defined on ToolView using the
// "default" view.
func ValidateToolView(result *ToolView) (err error) {
	if result.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "result"))
	}
	if result.Version == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("version", "result"))
	}
	if result.Packager == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("packager", "result"))
	}
	return
}
