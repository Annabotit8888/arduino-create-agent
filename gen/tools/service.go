// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// tools service
//
// Command:
// $ goa gen github.com/arduino/arduino-create-agent/design -debug

package tools

import (
	"context"

	toolsviews "github.com/arduino/arduino-create-agent/gen/tools/views"
)

// The tools service managed the tools installed in the system.
type Service interface {
	// List implements list.
	List(context.Context) (res *Tool, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "tools"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"list"}

// Tool is the result type of the tools service list method.
type Tool struct {
	// The name of the tool
	Name string
	// The version of the tool
	Version string
	// The packager of the tool
	Packager string
}

// NewTool initializes result type Tool from viewed result type Tool.
func NewTool(vres *toolsviews.Tool) *Tool {
	var res *Tool
	switch vres.View {
	case "default", "":
		res = newTool(vres.Projected)
	}
	return res
}

// NewViewedTool initializes viewed result type Tool from result type Tool
// using the given view.
func NewViewedTool(res *Tool, view string) *toolsviews.Tool {
	var vres *toolsviews.Tool
	switch view {
	case "default", "":
		p := newToolView(res)
		vres = &toolsviews.Tool{p, "default"}
	}
	return vres
}

// newTool converts projected type Tool to service type Tool.
func newTool(vres *toolsviews.ToolView) *Tool {
	res := &Tool{}
	if vres.Name != nil {
		res.Name = *vres.Name
	}
	if vres.Version != nil {
		res.Version = *vres.Version
	}
	if vres.Packager != nil {
		res.Packager = *vres.Packager
	}
	return res
}

// newToolView projects result type Tool into projected type ToolView using the
// "default" view.
func newToolView(res *Tool) *toolsviews.ToolView {
	vres := &toolsviews.ToolView{
		Name:     &res.Name,
		Version:  &res.Version,
		Packager: &res.Packager,
	}
	return vres
}
